<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="false" IsPlaceable="false" MainGUID="9AADF389-7B6D-4830-B44A-53DD116F7632" MigrationValue="Normal" Owner="1196638531" Signature="1196644685" Version="41">
<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>B2970E4C-8680-4061-8670-2F4B638F3953</MainGUID>
</Ancestry>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
	<Macro>
		<MName><![CDATA["LIMA_Profil"]]></MName>
		<MainGUID>ABA40EB1-0457-42E5-810E-8FBFB72DD1C4</MainGUID>
	</Macro>
</CalledMacros>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
!hotspot 0,0,0:sphere .01:lin_ 0,0,0,1,0,0:lin_ 0,0,0,0,.5,0:lin_ 0,0,0,0,0,2

resol gs_resol

! ==================================================================
! Hotspots
! ==================================================================


HOTSPOT -A/2, 0, 0, unID	: UnID = UnID+1
HOTSPOT  A/2, 0, 0, unID	: UnID = UnID+1
HOTSPOT -A/2, B, 0, unID	: UnID = UnID+1
HOTSPOT  A/2, B, 0, unID	: UnID = UnID+1

HOTSPOT -A/2, 0, gs_frame_thk, unID	: UnID = UnID+1
HOTSPOT  A/2, 0, gs_frame_thk, unID	: UnID = UnID+1
HOTSPOT -A/2, B, gs_frame_thk, unID	: UnID = UnID+1
HOTSPOT  A/2, B, gs_frame_thk, unID	: UnID = UnID+1

! ==================================================================
! Flipping at Inward Opening
! ==================================================================
if not(bOpenOut) then
	mulz -1
	addz -gs_frame_thk
endif

!!!!!!!!!!!!!!*****************************************************************************************
!!!!!!!!!!!!!!********************************   	Frame Profiles     ********************************
!!!!!!!!!!!!!!*****************************************************************************************

gosub FRAME_BASE + iFrameType

if not(bOpenOut) then
	del 2
endif

! ==================================================================
END	! END ! END ! END ! END ! END ! END ! END ! END ! END ! END ! END
! ==================================================================

! ==================================================================
"baseTexture":
! ==================================================================
	base
	vert 0,   0,   0	!#1
	vert 0,   0,   0.1	!#2
	vert 0.1, 0,   0	!#3
	vert 0,   0.1, 0	!#4
	coor 258, -1, -2, -3, -4
	body -1 
return
]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
!hotspot2 0,0 : circle2 0,0, 0.01 : line2 0,0, 1,0 : line2 0,0, 0,0.5

! ==================================================================
! Frame Hotspots
! ==================================================================

if iDetLevel2D < DETLEVEL_2D_100 then
	HOTSPOT2 -A/2,			0, 				unID	: unID = unID + 1
	HOTSPOT2  A/2, 			0, 				unID	: unID = unID + 1
	HOTSPOT2 -A/2,			-gs_frame_thk,	unID	: unID = unID + 1
	HOTSPOT2  A/2,			-gs_frame_thk,	unID	: unID = unID + 1
endif

!hotspot2  0,		0,	unID, xTransom, 1	: unID = unID + 1
!hotspot2  xTransom,	0,	unID, xTransom, 2	: unID = unID + 1
!hotspot2 -1,		0,	unID, xTransom, 3	: unID = unID + 1

! ==================================================================
! Flipping at Inward Opening
! ==================================================================
if not(bOpenOut) then
	mul2 1, -1
	add2 0, gs_frame_thk
endif

! ==================================================================
! Frame Background Fill
! ==================================================================

PEN gs_pen_2D

if isWindow then
!	fill gs_fillShCover
	
	FillStatus	= 1 + 2 + 4
	FillOffsetZ= 0
	
	if iDetLevel2D < DETLEVEL_2D_100 then
		FillOffsetLout	= 0.028
		FillOffsetRout	= 0.028
	else
		FillOffsetLout	= 0.04
		FillOffsetRout	= 0.04
	endif
	FillOffsetLin	= 0.04
	FillOffsetRin	= 0.04
endif

!!!!!!!!!!!!!!*****************************************************************************************
!!!!!!!!!!!!!!********************************   	Frame Profiles     ********************************
!!!!!!!!!!!!!!*****************************************************************************************

pen gs_frame_pen_cont

drawindex 20

gosub FRAME_BASE + iFrameType

if not(bOpenOut) then
	del 2
endif

drawindex 10

POLY2_B 4, FillStatus, gs_penShCov_fg, gs_penShCov_bg,
	-A/2 + FillOffsetLout,	FillOffsetZ,				1,
	A/2 - FillOffsetRout,	FillOffsetZ,				0, 
	A/2 - FillOffsetRin,	FillOffsetZ - gs_frame_thk,	1,
	-A/2 + FillOffsetLin,	FillOffsetZ - gs_frame_thk,	0

END
!!!!!!!*****************************************************************************
!!!!!!!*END END END END END END END END END END END END END END END END END END ****
!!!!!!!*****************************************************************************

!!!!!!!!!=======================================================================  Put The Profile on Both side - Left + Right
! Incoming Parameters
! [nsp] - Profile Contour parameters [X,Y,Status]
! Pen_FG - Fill Pen 
! Pen_BG - Background Fill Pen
! OffsetR - Rigth Frame Offset
! OffsetL - Left Frame Offset
!
! Returning Parameters
! None
!
! Returning Model
! Profile Polygon fill
!!!!!!!!------------------------------------------------------------------------
"DrawFill2D":
	if nsp>8 then 
		ADD2 A/2,0
		POLY2_B nsp/3, 1+2, Pen_FG, Pen_BG,
			use(nsp)
		DEL 1
		ADD2 -A/2,0
		MUL2 -1,1
		POLY2_B nsp/3, 1+2, Pen_FG, Pen_BG,
			get(nsp)
		DEL 2
	else
		for i=1 to nsp
			temp = get(1)
		next i
	endif

return


!!!!!!!!!=======================================================================  Place 2D Polygons

"Place2DPolys":
	if nsp>8 then 
		poly2_b nsp/3, 1+2, Pen_FG, Pen_BG,
			get(nsp)
		gosub "CleanStack"
	else
		gosub "CleanStack"
	endif
return


]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
EPS			= 0.001
FRAME_BASE	= 1000

TubeStatus 	= 1+2+32+16 + 64	!!!! Default Tube Status
PlaceType 	= 2					!!!! Old Version Tube Placemen. if "2", then NEW one
ShowHoles	= 1					!!!! If you want to hide the holes in the profiles switch it to 0
ShowArcs	= 1					!!!! Show Profile Arcs in 3D

! iDetLevel2D
	DETLEVEL_2D_MVO		= -2
	DETLEVEL_2D_SCALE	= -1
	DETLEVEL_2D_OFF		= 0
	DETLEVEL_2D_10		= 10
	DETLEVEL_2D_50		= 50
	DETLEVEL_2D_100		= 100
	DETLEVEL_2D_200		= 200

! iDetLevel3D
	DETLEVEL_3D_MVO		= -2
	DETLEVEL_3D_SCALE	= -1
	DETLEVEL_3D_OFF		= 0
	DETLEVEL_3D_10		= 10
	DETLEVEL_3D_50		= 50
	DETLEVEL_3D_100		= 100

! Profile array indexes
	PAI_PRNUM		= 1
	PAI_MOVX		= 2
	PAI_MOVY		= 3
	PAI_ROT			= 4
	PAI_MIRRX		= 5
	PAI_MIRRY		= 6
	PAI_STARTOFFS	= 7
	PAI_ENDOFFS		= 8
	PAI_MAT			= 9
	PAI_STARTROT	= 10
	PAI_ENDROT		= 11
	PAI_FILL		= 12

! Fill/contour array column positions as seen in sect_attrs
	FP_BGPEN		= 1		! Background pen
	FP_FGPEN		= 2		! Foreground pen
	FP_CONTPEN		= 3		! Contour pen

! iType3D
	MAT_IN			= 1		! Inner side surface
	MAT_OUT			= 2		! Outer side surface
	MAT_ALU			= 3		! Aluminium
	MAT_STEEL		= 4 	! Steel surface
	MAT_SEALANT		= 5		! Sealant surface
	MAT_THERMAL		= 6		! Thermal blocker
	MAT_GLASSBACK 	= 7		! Glassback
	MAT_BRUSH		= 8		! Brush
	MAT_GLASS		= 9		! Glass surface
	MAT_HANDLE		= 10	! Operator (handle, hinge) surfaces
	MAT_THRESHOLD	= 11	! Threshold
	MAT_SASH_IN		= 12	! Sash inner, if differs from frame
	MAT_SASH_OUT	= 13	! Sash outer, if differs from frame
	MAT_FOAM 		= 14 	! Foam fillings

!iType2D - 2d pen settings
	FILL_EMPTY			= 1 ! Non section lines
	FILL_ALU			= 2 ! Aluminium
	FILL_WOOD			= 3 ! Timber
	FILL_PVC			= 4 ! PVC
	FILL_STEEL			= 5 ! Steel
	FILL_FOAM			= 6 ! Foam
	FILL_SEALANT		= 7 ! Gum
	FILL_THERMAL		= 8 ! Thermal blocker
	FILL_GLASS			= 9 ! Glass
	FILL_SASH			= 10 ! Sash
	FILL_FRAME			= 11 ! Frame
	FILL_HANDLE			= 12 ! Operator (kilincs, vasalat) sz&#237;n
	FILL_WALLHOLE		= 13 ! Wallhole fill
	FILL_ORIGFRAME		= 14 ! Original frame fill

! ==================================================================
! Static Materials 
! ==================================================================

	define material	"Black_bo18" 20,
		  0.1,   0.1,   0.1,
		 0.98,   0.4,  0.33,     0,    7.8,     0,
		  0.909804,   0.909804,   0.909804,
		  0.027451,  0.0392157,  0.0392157,
				 0, 0,    -1,
		0

materialS[MAT_SEALANT]		= IND(MATERIAL,"Black_bo18")

! ==============================================================================
!
! End of Master Script
!
! ==============================================================================

goto "endMasterSript"

! ==============================================================================
!
! SubRoutines
!
! ==============================================================================

! ==============================================================================
!  Profile definitons
! ==============================================================================

1001:
	dim ProfArr[][]
	PN = 1

	ProfArr[PN][PAI_PRNUM] = 1		: ProfArr[PN][PAI_MOVX] = 0		: ProfArr[PN][PAI_MOVY] = 0
	ProfArr[PN][PAI_ROT] = 90		: ProfArr[PN][PAI_MIRRX] = 1	: ProfArr[PN][PAI_MIRRY] = 0
	ProfArr[PN][PAI_STARTOFFS] = 0	: ProfArr[PN][PAI_ENDOFFS] = 0	: ProfArr[PN][PAI_MAT] 	= MAT_OUT
	ProfArr[PN][PAI_STARTROT] = 0	: ProfArr[PN][PAI_ENDROT] = 0	: ProfArr[PN][PAI_FILL] = FILL_FRAME
	PN = PN+1

	if GLOB_SCRIPT_TYPE = 3 then
		if isWindow then
			PUT  1,		 0,	0, 0 
			PUT -A/2,	 0,	0, 0 
			PUT -A/2,	B,	0, 0 
			PUT  A/2,	B,	0, 0 
			PUT  A/2,	 0,	0, 0 
			PUT -A/2,	 0,	0, 0 
			PUT -A/2,	 1,	0, 0 
		else
			PUT -A/2,	-1, 0, 0 
			PUT -A/2,	 0, 0, 0 
			PUT -A/2,	B,	0, 0 
			PUT  A/2,	B,	0, 0 
			PUT  A/2,	 0,	0, 0 
			PUT  A/2,	-1,	0, 0 
		endif
	else
			put -A/2,  0, -1
			put  A/2,  0,  1
	endif

	gosub "PlaceFrameGroup"
return

1002:
	dim ProfArr[][]
	PN = 1

	ProfArr[PN][PAI_PRNUM] = 1		: ProfArr[PN][PAI_MOVX] = 0		: ProfArr[PN][PAI_MOVY] = 0
	ProfArr[PN][PAI_ROT] = 90		: ProfArr[PN][PAI_MIRRX] = 1	: ProfArr[PN][PAI_MIRRY] = 0
	ProfArr[PN][PAI_STARTOFFS] = 0	: ProfArr[PN][PAI_ENDOFFS] = 0	: ProfArr[PN][PAI_MAT] = MAT_OUT
	ProfArr[PN][PAI_STARTROT] = 0	: ProfArr[PN][PAI_ENDROT] = 0	: ProfArr[PN][PAI_FILL] = FILL_FRAME
	PN = PN+1

	if GLOB_SCRIPT_TYPE = 3 then
		if isWindow then
			PUT  1,		 0,	0, 0 
			PUT -A/2,	 0,	0, 0 
			PUT -A/2,	 B,	0, 0 
			PUT  A/2,	 B,	0, 0 
			PUT  A/2,	 0,	0, 0 
			PUT -A/2,	 0,	0, 0 
			PUT -A/2,	 1,	0, 0 
		else
			PUT -A/2,	-1, 0, 0 
			PUT -A/2,	 0, 0, 0 
			PUT -A/2,	 B,	0, 0 
			PUT  A/2,	 B,	0, 0 
			PUT  A/2,	 0,	0, 0 
			PUT  A/2,	-1,	0, 0 
		endif
	else
			put -A/2,  0, -1
			put  A/2,  0,  1
	endif

	gosub "PlaceFrameGroup"


	dim ProfArr[][]
	PN = 1

	ProfArr[PN][PAI_PRNUM] = 2		: ProfArr[PN][PAI_MOVX] = 0		: ProfArr[PN][PAI_MOVY] = 0
	ProfArr[PN][PAI_ROT] = 0		: ProfArr[PN][PAI_MIRRX] = 0	: ProfArr[PN][PAI_MIRRY] = 1
	ProfArr[PN][PAI_STARTOFFS] = 0	: ProfArr[PN][PAI_ENDOFFS] = 0	: ProfArr[PN][PAI_MAT] = MAT_OUT
	ProfArr[PN][PAI_STARTROT] = 0	: ProfArr[PN][PAI_ENDROT] = 0	: ProfArr[PN][PAI_FILL] = FILL_FRAME
	PN = PN+1

	if GLOB_SCRIPT_TYPE = 3 then
			PUT  xTransom,	0 - 1,		0, 0 
			PUT  xTransom,	0,			0, 0 
			PUT  xTransom,	B - 0.010 - 0.04 * (iDetLevel3D < 100),	0, 0 
			PUT  xTransom,	B + 1,		0, 0 
	else
			put xTransom,  0, -1
	endif

	gosub "PlaceFrameGroup"
return

1003:
	dim ProfArr[][]
	PN = 1

	ProfArr[PN][PAI_PRNUM] = 1		: ProfArr[PN][PAI_MOVX] = 0		: ProfArr[PN][PAI_MOVY] = 0
	ProfArr[PN][PAI_ROT] = 90		: ProfArr[PN][PAI_MIRRX] = 1	: ProfArr[PN][PAI_MIRRY] = 0
	ProfArr[PN][PAI_STARTOFFS] = 0	: ProfArr[PN][PAI_ENDOFFS] = 0	: ProfArr[PN][PAI_MAT] = MAT_OUT
	ProfArr[PN][PAI_STARTROT] = 0	: ProfArr[PN][PAI_ENDROT] = 0	: ProfArr[PN][PAI_FILL] = FILL_FRAME
	PN = PN+1

	if GLOB_SCRIPT_TYPE = 3 then
		PUT -A/2,	-1,	0, 0 
		PUT -A/2,	 0,	0, 0 
		PUT -A/2,	 B - OpeningArcHeight,	0, 0

		d1squared = (a/2)**2 + (OpeningArcHeight) ** 2
		r = d1squared / 2 / hOpeningArc
		pCy = B - r
		angle = atn (hOpeningArc* 2 / A) * 2
		nPoints = round_int(round_int(nArchResolution / 4) / 90 * angle)

		for aI = 90 + angle to 90 - angle step -angle / nPoints
			yi = pCy + r * sin(aI)
			xI = r * cos(aI)

			if	-A/2 < xI \
			&	 xI < A/2 \
			then
		PUT	 xI,	 yI, 0, 0
			endif
		next aI

		PUT  A/2,	 B - OpeningArcHeight,	0, 0
		PUT  A/2,	 0,	0, 0 
		PUT  A/2,	-1,	0, 0 
	else
		put -A/2,  0, -1
		put  A/2,  0,  1
	endif

	gosub "PlaceFrameGroup"
return

1004:
	dim ProfArr[][]
	PN = 1

	ProfArr[PN][PAI_PRNUM] = 8		: ProfArr[PN][PAI_MOVX] = 0		: ProfArr[PN][PAI_MOVY] = 0
	ProfArr[PN][PAI_ROT] = 90		: ProfArr[PN][PAI_MIRRX] = 1	: ProfArr[PN][PAI_MIRRY] = 0
	ProfArr[PN][PAI_STARTOFFS] = 0	: ProfArr[PN][PAI_ENDOFFS] = 0	: ProfArr[PN][PAI_MAT] = MAT_OUT
	ProfArr[PN][PAI_STARTROT] = 0	: ProfArr[PN][PAI_ENDROT] = 0	: ProfArr[PN][PAI_FILL] = FILL_FRAME
	PN = PN+1

	if GLOB_SCRIPT_TYPE = 3 then
		if isWindow then
			PUT  1,		 0,	0, 0 
			PUT -A/2,	 0,	0, 0 
			PUT -A/2,	 B,	0, 0 
			PUT  A/2,	 B,	0, 0 
			PUT  A/2,	 0,	0, 0 
			PUT -A/2,	 0,	0, 0 
			PUT -A/2,	 1,	0, 0 
		else
			PUT -A/2,	-1, 0, 0 
			PUT -A/2,	 0, 0, 0 
			PUT -A/2,	 B,	0, 0 
			PUT  A/2,	 B,	0, 0 
			PUT  A/2,	 0,	0, 0 
			PUT  A/2,	-1,	0, 0 
		endif
	else
			put -A/2,  0, -1
			put  A/2,  0,  1
	endif

	gosub "PlaceFrameGroup"


	dim ProfArr[][]
	PN = 1

	ProfArr[PN][PAI_PRNUM] = 4		: ProfArr[PN][PAI_MOVX] = 0.0275		: ProfArr[PN][PAI_MOVY] = 0.055
	ProfArr[PN][PAI_ROT] = 0		: ProfArr[PN][PAI_MIRRX] = 0	: ProfArr[PN][PAI_MIRRY] = 1
	ProfArr[PN][PAI_STARTOFFS] = 0	: ProfArr[PN][PAI_ENDOFFS] = 0	: ProfArr[PN][PAI_MAT]	= MAT_OUT
	ProfArr[PN][PAI_STARTROT] = 0	: ProfArr[PN][PAI_ENDROT] = 0	: ProfArr[PN][PAI_FILL] = FILL_FRAME
	PN = PN+1

	if GLOB_SCRIPT_TYPE = 3 then
			put 0 + 0.0025,	-1,	0,	0
			put 0 + 0.0025,	0+0.03,	0,	0
			put 0 + 0.0025,	B-0.03,	0,	0
			put 0 + 0.0025,	B+1,0,	0
	else
			put 0 + 0.0025,  0, -1
	endif

	gosub "PlaceFrameGroup"
return

1005:
	dim ProfArr[][]
	PN = 1

	ProfArr[PN][PAI_PRNUM] = 8		: ProfArr[PN][PAI_MOVX] = 0		: ProfArr[PN][PAI_MOVY] = 0
	ProfArr[PN][PAI_ROT] = 90		: ProfArr[PN][PAI_MIRRX] = 1	: ProfArr[PN][PAI_MIRRY] = 0
	ProfArr[PN][PAI_STARTOFFS] = 0	: ProfArr[PN][PAI_ENDOFFS] = 0	: ProfArr[PN][PAI_MAT] = MAT_OUT
	ProfArr[PN][PAI_STARTROT] = 0	: ProfArr[PN][PAI_ENDROT] = 0	: ProfArr[PN][PAI_FILL] = FILL_FRAME
	PN = PN+1

	if GLOB_SCRIPT_TYPE = 3 then
		if isWindow then
			PUT  1,		 0,	0, 0 
			PUT -A/2,	 0,	0, 0 
			PUT -A/2,	 B,	0, 0 
			PUT  A/2,	 B,	0, 0 
			PUT  A/2,	 0,	0, 0 
			PUT -A/2,	 0,	0, 0 
			PUT -A/2,	 1,	0, 0 
		else
			PUT -A/2,	-1, 0, 0 
			PUT -A/2,	 0, 0, 0 
			PUT -A/2,	 B,	0, 0 
			PUT  A/2,	 B,	0, 0 
			PUT  A/2,	 0,	0, 0 
			PUT  A/2,	-1,	0, 0 
		endif
	else
			put -A/2,  0, -1
			put  A/2,  0,  1
	endif

	gosub "PlaceFrameGroup"


	dim ProfArr[][]
	PN = 1

	ProfArr[PN][PAI_PRNUM] = 4		: ProfArr[PN][PAI_MOVX] = 0.025	: ProfArr[PN][PAI_MOVY] = 0.055
	ProfArr[PN][PAI_ROT] = 0		: ProfArr[PN][PAI_MIRRX] = 0	: ProfArr[PN][PAI_MIRRY] = 1
	ProfArr[PN][PAI_STARTOFFS] = 0	: ProfArr[PN][PAI_ENDOFFS] = 0	: ProfArr[PN][PAI_MAT]	= MAT_OUT
	ProfArr[PN][PAI_STARTROT] = 0	: ProfArr[PN][PAI_ENDROT] = 0	: ProfArr[PN][PAI_FILL] = FILL_FRAME
	PN = PN+1

	if GLOB_SCRIPT_TYPE = 3 then
			PUT -A/4 + 0.015,	 -1,	0, 0 
			PUT -A/4 + 0.015,	 0+0.03,		0, 0 
			PUT -A/4 + 0.015,	 B-0.03,		0, 0 
			PUT -A/4 + 0.015,	 B+1,	0, 0 
	else
			put -A/4 + 0.015,  0, -1
	endif

	gosub "PlaceFrameGroup"


	dim ProfArr[][]
	PN = 1

	ProfArr[PN][PAI_PRNUM] = 4		: ProfArr[PN][PAI_MOVX] = 0.025	: ProfArr[PN][PAI_MOVY] = 0.055
	ProfArr[PN][PAI_ROT] = 0		: ProfArr[PN][PAI_MIRRX] = 0	: ProfArr[PN][PAI_MIRRY] = 1
	ProfArr[PN][PAI_STARTOFFS] = 0	: ProfArr[PN][PAI_ENDOFFS] = 0	: ProfArr[PN][PAI_MAT]	= MAT_OUT
	ProfArr[PN][PAI_STARTROT] = 0	: ProfArr[PN][PAI_ENDROT] = 0	: ProfArr[PN][PAI_FILL] = FILL_FRAME
	PN = PN+1

	if GLOB_SCRIPT_TYPE = 3 then
			PUT  A/4 - 0.015,	 -1,	0, 0 
			PUT  A/4 - 0.015,	 0,		0, 0 
			PUT  A/4 - 0.015,	 B,		0, 0 
			PUT  A/4 - 0.015,	 B+1,	0, 0 
	else
			put  A/4 - 0.015,  	 0, 	-1
	endif

	gosub "PlaceFrameGroup"
return

1006:
	dim ProfArr[][]
	PN = 1

	ProfArr[PN][PAI_PRNUM] = 1		: ProfArr[PN][PAI_MOVX] = 0.025	: ProfArr[PN][PAI_MOVY] = 0
	ProfArr[PN][PAI_ROT] = 90		: ProfArr[PN][PAI_MIRRX] = 1	: ProfArr[PN][PAI_MIRRY] = 0
	ProfArr[PN][PAI_STARTOFFS] = 0	: ProfArr[PN][PAI_ENDOFFS] = 0	: ProfArr[PN][PAI_MAT] = MAT_OUT
	ProfArr[PN][PAI_STARTROT] = 0	: ProfArr[PN][PAI_ENDROT] = 0	: ProfArr[PN][PAI_FILL] = FILL_FRAME
	PN = PN+1

	if GLOB_SCRIPT_TYPE = 3 then
		PUT  1,		 0+0.025,	0, 0 
		PUT -A/4,	 0+0.025,	0, 0 
		PUT -A/4,	 B-0.025,	0, 0 
		PUT  A/4,	 B-0.025,	0, 0 
		PUT  A/4,	 0+0.025,	0, 0 
		PUT -A/4,	 0+0.025,	0, 0 
		PUT -A/4,	 1+0.025,	0, 0 
	else
		put -A/4,  0, -1
		put  A/4,  0,  1
	endif

	gosub "PlaceFrameGroup"


	dim ProfArr[][]
	PN = 1

	ProfArr[PN][PAI_PRNUM] = 7		: ProfArr[PN][PAI_MOVX] = 0.0	: ProfArr[PN][PAI_MOVY] = 0.0
	ProfArr[PN][PAI_ROT] = 0		: ProfArr[PN][PAI_MIRRX] = 0	: ProfArr[PN][PAI_MIRRY] = 0
	ProfArr[PN][PAI_STARTOFFS] = 0.025	: ProfArr[PN][PAI_ENDOFFS] = 0.025	: ProfArr[PN][PAI_MAT]	= MAT_OUT
	ProfArr[PN][PAI_STARTROT] = 0	: ProfArr[PN][PAI_ENDROT] = 0	: ProfArr[PN][PAI_FILL] = FILL_FRAME
	PN = PN+1

	if GLOB_SCRIPT_TYPE = 3 then
			PUT -A/4+1,	 0,	0, 0 
			PUT -A/4,	 0,	0, 0 
			PUT -A/2,	 0,		0, 0 
			PUT -A/2,	 B,		0, 0 
			PUT -A/4,	 B,	0, 0 
			PUT -A/4+1,	 B,	0, 0 
	else
			put -A/2,  0, -1
	endif

	gosub "PlaceFrameGroup"


	dim ProfArr[][]
	PN = 1

	ProfArr[PN][PAI_PRNUM] = 7		: ProfArr[PN][PAI_MOVX] = -0	: ProfArr[PN][PAI_MOVY] = 0.0
	ProfArr[PN][PAI_ROT] = 0		: ProfArr[PN][PAI_MIRRX] = 0	: ProfArr[PN][PAI_MIRRY] = 0
	ProfArr[PN][PAI_STARTOFFS] = 0.025	: ProfArr[PN][PAI_ENDOFFS] = 0.025	: ProfArr[PN][PAI_MAT]	= MAT_OUT
	ProfArr[PN][PAI_STARTROT] = 0	: ProfArr[PN][PAI_ENDROT] = 0	: ProfArr[PN][PAI_FILL] = FILL_FRAME
	PN = PN+1

	if GLOB_SCRIPT_TYPE = 3 then
			PUT  A/4-1,	 B,	0, 0 
			PUT  A/4,	 B,	0, 0 
			PUT  A/2,	 B,		0, 0 
			PUT  A/2,	 0,		0, 0
			PUT  A/4,	 0,	0, 0 
			PUT  A/4-1,	 0,	0, 0 
	else
			put  A/2,  0, 1
	endif

	gosub "PlaceFrameGroup"
return

1007:
	dim ProfArr[][]
	PN = 1

	ProfArr[PN][PAI_PRNUM] = 1		: ProfArr[PN][PAI_MOVX] = 0		: ProfArr[PN][PAI_MOVY] = 0
	ProfArr[PN][PAI_ROT] = 90		: ProfArr[PN][PAI_MIRRX] = 1	: ProfArr[PN][PAI_MIRRY] = 0
	ProfArr[PN][PAI_STARTOFFS] = 0	: ProfArr[PN][PAI_ENDOFFS] = 0	: ProfArr[PN][PAI_MAT] = MAT_OUT
	ProfArr[PN][PAI_STARTROT] = 0	: ProfArr[PN][PAI_ENDROT] = 0	: ProfArr[PN][PAI_FILL] = FILL_FRAME
	PN = PN+1

	if GLOB_SCRIPT_TYPE = 3 then
			PUT  1,		 0,	0, 0 
			PUT -A/2,	 0,	0, 0 
			PUT -A/2,	 B,	0, 0 
			PUT  0.015,	 B,	0, 0 
			PUT  0.015,	 0,	0, 0 
			PUT -A/2,	 0,	0, 0 
			PUT -A/2,	 1,	0, 0 
	else
			put -A/2,   0, -1
			put 0.015,  0, 1
	endif

	gosub "PlaceFrameGroup"


	dim ProfArr[][]
	PN = 1

	ProfArr[PN][PAI_PRNUM] = 7		: ProfArr[PN][PAI_MOVX] = 0.0	: ProfArr[PN][PAI_MOVY] = 0.0
	ProfArr[PN][PAI_ROT] = 0		: ProfArr[PN][PAI_MIRRX] = 0	: ProfArr[PN][PAI_MIRRY] = 0
	ProfArr[PN][PAI_STARTOFFS] = 0	: ProfArr[PN][PAI_ENDOFFS] = 0	: ProfArr[PN][PAI_MAT]	= MAT_OUT
	ProfArr[PN][PAI_STARTROT] = 0	: ProfArr[PN][PAI_ENDROT] = 0	: ProfArr[PN][PAI_FILL] = FILL_FRAME
	PN = PN+1

	if GLOB_SCRIPT_TYPE = 3 then
			PUT 0.015-1,	B,	0, 0 
			PUT 0.015,		B,	0, 0 
			PUT A/2,		B,	0, 0 
			PUT A/2,		0,	0, 0 
			PUT 0.015,		0,	0, 0 
			PUT 0.015-1,	0,	0, 0 
	else
			put  A/2,  0,  1
	endif

	gosub "PlaceFrameGroup"

	FillOffsetLout	= 0.01
	FillOffsetRout	= 0.01
	FillOffsetLin	= 0.01
	FillOffsetRin	= 0.01
return

1008:
	dim ProfArr[][]
	PN = 1

	ProfArr[PN][PAI_PRNUM] = 1		: ProfArr[PN][PAI_MOVX] = 0		: ProfArr[PN][PAI_MOVY] = 0
	ProfArr[PN][PAI_ROT] = 90		: ProfArr[PN][PAI_MIRRX] = 1	: ProfArr[PN][PAI_MIRRY] = 0
	ProfArr[PN][PAI_STARTOFFS] = 0	: ProfArr[PN][PAI_ENDOFFS] = 0	: ProfArr[PN][PAI_MAT] = MAT_OUT
	ProfArr[PN][PAI_STARTROT] = 0	: ProfArr[PN][PAI_ENDROT] = 0	: ProfArr[PN][PAI_FILL] = FILL_FRAME
	PN = PN+1

	if GLOB_SCRIPT_TYPE = 3 then
		d1squared	= wOpeningArc ** 2 + hOpeningArc ** 2
		r			= d1squared / wOpeningArc / 2
		pCy = B - hOpeningArc 
		angle = atn (wOpeningArc / hOpeningArc) * 2
		nPoints = round_int(round_int(nArchResolution / 4) / 90 * angle)

		PUT  A/2,		0 + 1,	0, 0
		PUT  A/2,		0,	0, 0

		if	hOpeningArc < B \
		then
			PUT -A/2,		0,	0, 0
			PUT -A/2,		B - hOpeningArc,	0, 0
		else
		endif	
	 
		for aI = 0 to angle step angle / nPoints
			yI = pCy + r * sin(aI)
			xI = -A/2 + r - r * cos(aI)
			if	xI < A/2 \
			&	yI > 0 \
			then
				PUT	 xI,	 yI, 0, 0
			endif
		next aI

		! ----Ensuring last stuff to be put----
		yI = pCy + r * sin(angle)
		xI = -A/2 + offset + r - r * cos(angle)
	
		PUT	 xI,	 yI,	 0, 0
		!/----Ensuring last stuff to be put----

		if	wOpeningArc < A \
		then
			PUT  A/2 - wOpeningArc,	B,	0, 0
			PUT  A/2,		B,	0, 0
		else
		endif		 

		PUT  A/2,		0,	0, 0
		PUT  A/2 - 1,		0,	0, 0
	else
		put -A/2,  0, -1
		put  A/2,  0,  1
	endif

	gosub "PlaceFrameGroup"
return


! ==============================================================================
! /Profile definitons
! ==============================================================================

! ==============================================================================
! Calculate VECTOR Angle Normal Angle
! ------------------------------------------------------------------------------

"VectorAngle":
	!!!  INCOMING: dx, dy
	!!!  RETURNING: VectAng
		
	VectAng = 90
	if ABS(dx)>EPS then 
		VectAng = ATN(dy/dx)
		if VectAng>0 and dx<EPS then VectAng = VectAng+180
		if VectAng<=0 and dx<EPS then VectAng = VectAng+180
	else
		if dy>EPS then 
			VectAng = 90 
		else
			VectAng = 270 
		endif
	endif

	if VectAng<EPS then VectAng=VectAng+360
return

! ==============================================================================

"CleanStack":
	for z=1 to nsp
		temp = get(1)
	next z
return

!!!!!!!!!!!!!!!!*********************************************************** Place FrameGroup
"PlaceFrameGroup":
	dim TubeCoordS[][]
	if GLOB_SCRIPT_TYPE = 2 then
		PathNum = nsp / 3
		for tp=1 to PathNum
			TubeCoordS[tp][1] = get(1)	!X
			TubeCoordS[tp][2] = get(1)	!Y
			TubeCoordS[tp][3] = get(1)	!scale x -1 means mirrored
		next tp
	else
		PathNum = nsp / 4
		for tp=1 to PathNum
			TubeCoordS[tp][1] = get(1)	!X
			TubeCoordS[tp][2] = get(1)	!Y
			TubeCoordS[tp][3] = get(1)	!Z
			TubeCoordS[tp][4] = get(1)	!Rotation, should be 0
		next tp
	endif

	for fnm = 1 to PN-1
		CALL "LIMA_Profil" PARAMETERS 	all	\
			ShowHoles 		= ShowHoles,
			ShowArcs 		= ShowArcs,
			ProfArr 		= ProfArr[fnm],				!
			TubeCoordS		= TubeCoordS, 				!
!			PN 				= PN,
!			PlaceType		= PlaceType,
			PathNum			= PathNum
		ProfilNum = nsp/3	
	next fnm
return

!"Intersection":
!! x11, x12, y11, y12 - First line
!! x21, x22, y21, y22 - Second line
!!returns: xR, yR
!	_d = (y22 - y21) * (x12 - x11) - (x22 - x21) * (y12 - y11)
!	if d:
!		uA = ((x22 - x21) * (y11 - y21) - (y22 - y21) * (x11 - x21)) / d
!		# uB = ((x12 - x11) * (y11 - y21) - (y12 - y11) * (x11 - x21)) / d
!	else:
!		return
!	# if not (0 <= uA <= 1 and 0 <= uB <= 1):
!	#     return
!	x = x11 + uA * (x12 - x11)
!	y = y11 + uA * (y12 - y11)
!return

! ==============================================================================
!
! End of Macros Script
!
! ==============================================================================

"endMasterSript":



]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

]]>
</Script_UI>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

]]>
</Script_VL>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_FWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

]]>
</Script_FWM>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_BWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

]]>
</Script_BWM>

<ParamSection SectVersion="27" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<AutoHotspots>false</AutoHotspots>
		<StatBits>
			<STBit_FixSize/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Dimension 1"]]></Description>
			<Fix/>
			<Value>1</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Dimension 2"]]></Description>
			<Fix/>
			<Value>1</Value>
		</Length>
		<Length Name="ZZYZX">
			<Description><![CDATA["Height"]]></Description>
			<Fix/>
			<Value>1</Value>
		</Length>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Show 2D Hotspots in 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Bottom Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Top Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="isWindow">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bOpenOut">
			<Description><![CDATA["Opening Direction"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Integer Name="iFrameType">
			<Description><![CDATA["Frame Type"]]></Description>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_resol">
			<Description><![CDATA[""]]></Description>
			<Value>18</Value>
		</Integer>
		<Length Name="gs_frame_thk">
			<Description><![CDATA[""]]></Description>
			<Value>0.06</Value>
		</Length>
		<Integer Name="UnID">
			<Description><![CDATA[""]]></Description>
			<Value>100</Value>
		</Integer>

		<!-- t_Surfaces: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="t_Surfaces">
			<Description><![CDATA["Surfaces"]]></Description>
		</Title>
		<Material Name="gs_frame_mat_out">
			<Description><![CDATA["Frame Surface Outside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_frame_mat_in">
			<Description><![CDATA["Frame Surface Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>

		<!-- gs_2D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_2D_representation">
			<Description><![CDATA["2D and Section Representation"]]></Description>
		</Title>
		<Integer Name="iDetLevel2D">
			<Description><![CDATA["2D Detail Level"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>10</Value>
		</Integer>
		<PenColor Name="gs_pen_2D">
			<Description><![CDATA["Uncut Line Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</PenColor>
		<PenColor Name="gs_frame_pen_cont">
			<Description><![CDATA["Frame Contour Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</PenColor>

		<!-- gs_3D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_3D_representation">
			<Description><![CDATA["3D Representation"]]></Description>
		</Title>
		<Integer Name="iDetLevel3D">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>10</Value>
		</Integer>
		<PenColor Name="gs_frame_pen">
			<Description><![CDATA["Frame Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</PenColor>

		<!-- t_Fills: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="t_Fills">
			<Description><![CDATA["Fills"]]></Description>
		</Title>
		<FillPattern Name="gs_fillFr">
			<Description><![CDATA["Frame Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_penFr_fg">
			<Description><![CDATA["Frame Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>103</Value>
		</PenColor>
		<PenColor Name="gs_penFr_bg">
			<Description><![CDATA["Frame Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<FillPattern Name="fillType_sealant">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="fillPenFg_sealant">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="fillPenBg_sealant">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<FillPattern Name="fillType_thermal">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="fillPenFg_thermal">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="fillPenBg_thermal">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="pFillS">
			<Description><![CDATA["Fill pens"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="17" SecondDimension="3">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
				<AVal Column="3" Row="1">0</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">0</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="1" Row="9">0</AVal>
				<AVal Column="2" Row="9">0</AVal>
				<AVal Column="3" Row="9">0</AVal>
				<AVal Column="1" Row="10">0</AVal>
				<AVal Column="2" Row="10">0</AVal>
				<AVal Column="3" Row="10">0</AVal>
				<AVal Column="1" Row="11">0</AVal>
				<AVal Column="2" Row="11">0</AVal>
				<AVal Column="3" Row="11">0</AVal>
				<AVal Column="1" Row="12">0</AVal>
				<AVal Column="2" Row="12">0</AVal>
				<AVal Column="3" Row="12">0</AVal>
				<AVal Column="1" Row="13">0</AVal>
				<AVal Column="2" Row="13">0</AVal>
				<AVal Column="3" Row="13">0</AVal>
				<AVal Column="1" Row="14">0</AVal>
				<AVal Column="2" Row="14">0</AVal>
				<AVal Column="3" Row="14">0</AVal>
				<AVal Column="1" Row="15">0</AVal>
				<AVal Column="2" Row="15">0</AVal>
				<AVal Column="3" Row="15">0</AVal>
				<AVal Column="1" Row="16">0</AVal>
				<AVal Column="2" Row="16">0</AVal>
				<AVal Column="3" Row="16">0</AVal>
				<AVal Column="1" Row="17">0</AVal>
				<AVal Column="2" Row="17">0</AVal>
				<AVal Column="3" Row="17">0</AVal>
			</ArrayValues>
		</PenColor>
		<FillPattern Name="fFillS">
			<Description><![CDATA["Fill fill types"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="17" SecondDimension="0">
				<AVal Row="1">0</AVal>
				<AVal Row="2">0</AVal>
				<AVal Row="3">0</AVal>
				<AVal Row="4">0</AVal>
				<AVal Row="5">0</AVal>
				<AVal Row="6">0</AVal>
				<AVal Row="7">0</AVal>
				<AVal Row="8">0</AVal>
				<AVal Row="9">0</AVal>
				<AVal Row="10">0</AVal>
				<AVal Row="11">0</AVal>
				<AVal Row="12">0</AVal>
				<AVal Row="13">0</AVal>
				<AVal Row="14">0</AVal>
				<AVal Row="15">0</AVal>
				<AVal Row="16">0</AVal>
				<AVal Row="17">0</AVal>
			</ArrayValues>
		</FillPattern>
		<LineType Name="lFillS">
			<Description><![CDATA["Fill linetypes"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="17" SecondDimension="0">
				<AVal Row="1">0</AVal>
				<AVal Row="2">0</AVal>
				<AVal Row="3">0</AVal>
				<AVal Row="4">0</AVal>
				<AVal Row="5">0</AVal>
				<AVal Row="6">0</AVal>
				<AVal Row="7">0</AVal>
				<AVal Row="8">0</AVal>
				<AVal Row="9">0</AVal>
				<AVal Row="10">0</AVal>
				<AVal Row="11">0</AVal>
				<AVal Row="12">0</AVal>
				<AVal Row="13">0</AVal>
				<AVal Row="14">0</AVal>
				<AVal Row="15">0</AVal>
				<AVal Row="16">0</AVal>
				<AVal Row="17">0</AVal>
			</ArrayValues>
		</LineType>
		<Material Name="materialS">
			<Description><![CDATA["Materials' array"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="12" SecondDimension="0">
				<AVal Row="1">0</AVal>
				<AVal Row="2">0</AVal>
				<AVal Row="3">0</AVal>
				<AVal Row="4">0</AVal>
				<AVal Row="5">0</AVal>
				<AVal Row="6">0</AVal>
				<AVal Row="7">0</AVal>
				<AVal Row="8">0</AVal>
				<AVal Row="9">0</AVal>
				<AVal Row="10">0</AVal>
				<AVal Row="11">0</AVal>
				<AVal Row="12">0</AVal>
			</ArrayValues>
		</Material>
		<String Name="BO_prodaturl">
			<Description><![CDATA["Product data url:"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Length Name="xTransom">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Integer Name="nArchResolution">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>32</Value>
		</Integer>
		<Length Name="hOpeningArc">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="wOpeningArc">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Integer Name="iDoorType">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
	</Parameters>
</ParamSection>

<Keywords SectVersion="1" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Keywords>

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Comment>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>BIMobject</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

</Symbol>
